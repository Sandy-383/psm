import pandas as pd

# Sample data for demonstration
sales_data = {
    'OrderID': [1, 2, 3, 4, 5],
    'Product': ['Laptop', 'Mouse', 'Keyboard', 'Monitor', 'Headphones'],
    'Amount': [1200, 25, 75, 300, 100]
}

feedback_data = {
    'OrderID': [3, 4, 5, 6, 7],
    'Customer': ['John', 'Alice', 'David', 'Eva', 'Sam'],
    'Feedback': ['Good', 'Excellent', 'Average', 'Poor', 'Good']
}

sales_df = pd.DataFrame(sales_data)
feedback_df = pd.DataFrame(feedback_data)

# Function to demonstrate different types of merges
def demonstrate_merges(sales_df, feedback_df):
    print("Inner Join: when you want only matching records from both tables\n")
    inner_merged = pd.merge(sales_df, feedback_df, on='OrderID', how='inner')
    print(f"Inner Join: {inner_merged.shape} rows\n{inner_merged}\n")

    print("Left Join: when you want all records from the left table (sales_df)\n")
    left_merged = pd.merge(sales_df, feedback_df, on='OrderID', how='left')
    print(f"Left Join: {left_merged.shape} rows\n{left_merged}\n")

    print("Right Join: when you want all records from the right table (feedback_df)\n")
    right_merged = pd.merge(sales_df, feedback_df, on='OrderID', how='right')
    print(f"Right Join: {right_merged.shape} rows\n{right_merged}\n")

    print("Outer Join: all records from both tables\n")
    outer_merged = pd.merge(sales_df, feedback_df, on='OrderID', how='outer')
    print(f"Outer Join: {outer_merged.shape} rows\n{outer_merged}\n")

    return inner_merged, left_merged, right_merged, outer_merged


# Call the function and store results
inner_result, left_result, right_result, outer_result = demonstrate_merges(sales_df, feedback_df)

print("Merge Operations Complete âœ…")